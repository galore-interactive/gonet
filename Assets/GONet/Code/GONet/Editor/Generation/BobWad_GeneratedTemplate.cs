// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using GONet;
using GONet.Utils;
using GONet.Generation;

namespace Assets.GONet.Code.GONet.Editor.Generation
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System.Text.RegularExpressions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class BobWad_GeneratedTemplate : BobWad_GeneratedTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            this.Write("\r\n");
            this.Write(@"
/* Copyright (c) 2019 Galore Interactive LLC - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Shaun Sheppard <shasheppard@gmail.com>, June 2019
 *
 * Authorized use is explicitly limited to the following:	
 * -The ability to view and reference source code without changing it
 * -The ability to enhance debugging with source code access
 * -The ability to distribute products based on original sources for non-commercial purposes, whereas this license must be included if source code provided in said products
 * -The ability to commercialize products built on original source code, whereas this license must be included if source code provided in said products
 * -The ability to modify source code for local use only
 * -The ability to distribute products based on modified sources for non-commercial purposes, whereas this license must be included if source code provided in said products
 * -The ability to commercialize products built on modified source code, whereas this license must be included if source code provided in said products
 */

using System;
using System.IO;
using System.Linq;
using System.Text;
using UnityEngine;
using GONet;

namespace GONet
{

");
            
            #line 40 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

	HashSet<string> syncEventTypeFullNames = new HashSet<string>();
	foreach (var typeKVP in uniqueCombos)
    {
		foreach (var memberKVP in typeKVP.Value)
        {
			{ // FIY, this block is mostly coppi pasta from below:!!:
				const string UNDIE = "_";
				const string PER = ".";
				const string SYNC_EV = "SyncEvent_";
				ValueTuple<string, AnimatorControllerParameterGenerationInfo> memberTuple = memberKVP.Value;
				string shortComponentType = typeKVP.Key.Contains(PER) ? typeKVP.Key.Substring(typeKVP.Key.LastIndexOf(PER) + 1) : typeKVP.Key;
				string className = string.Concat(SYNC_EV, shortComponentType, UNDIE, memberKVP.Key);

				syncEventTypeFullNames.Add(string.Concat("GONet.", className)); // except this, this is not coppi pasta
            }
        }
    }

	HashSet<string> tmpTypeFullNames = new HashSet<string>(syncEventTypeFullNames);
	foreach (var types in AppDomain.CurrentDomain.GetAssemblies().OrderBy(a => a.FullName)
				.Select(a => a.GetTypes().Where(t => TypeUtils.IsTypeAInstanceOfTypeB(t, typeof(IGONetEvent)) && !t.IsAbstract).OrderBy(t2 => t2.FullName)))
    {
        foreach (var type in types)
        {
			tmpTypeFullNames.Add(type.FullName);
        }
    }

	int iPersistentEvents = 0;
	foreach (string tmpTypeFullName in tmpTypeFullNames.OrderBy(x => x))
    {
	
            
            #line default
            #line hidden
            this.Write("\t[MessagePack.Union(");
            
            #line 73 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((++iPersistentEvents - 1).ToString()));
            
            #line default
            #line hidden
            this.Write(", typeof(");
            
            #line 73 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tmpTypeFullName));
            
            #line default
            #line hidden
            this.Write("))]\r\n\t");
            
            #line 74 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("\tpublic partial interface IGONetEvent { }\r\n\r\n\r\n");
            
            #line 79 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

	tmpTypeFullNames = new HashSet<string>(syncEventTypeFullNames);
	foreach (var types in AppDomain.CurrentDomain.GetAssemblies().OrderBy(a => a.FullName)
				.Select(a => a.GetTypes().Where(t => TypeUtils.IsTypeAInstanceOfTypeB(t, typeof(ITransientEvent)) && !t.IsAbstract).OrderBy(t2 => t2.FullName)))
    {
        foreach (var type in types)
        {
			syncEventTypeFullNames.Add(type.FullName);
        }
    }

	iPersistentEvents = 0;
	foreach (string tmpTypeFullName in tmpTypeFullNames.OrderBy(x => x))
    {
	
            
            #line default
            #line hidden
            this.Write("\t[MessagePack.Union(");
            
            #line 94 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((++iPersistentEvents - 1).ToString()));
            
            #line default
            #line hidden
            this.Write(", typeof(");
            
            #line 94 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tmpTypeFullName));
            
            #line default
            #line hidden
            this.Write("))]\r\n\t");
            
            #line 95 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("\tpublic partial interface ITransientEvent : IGONetEvent { }\r\n\r\n\r\n");
            
            #line 100 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

	tmpTypeFullNames = new HashSet<string>(syncEventTypeFullNames);
	foreach (var types in AppDomain.CurrentDomain.GetAssemblies().OrderBy(a => a.FullName)
				.Select(a => a.GetTypes().Where(t => TypeUtils.IsTypeAInstanceOfTypeB(t, typeof(IPersistentEvent)) && !t.IsAbstract).OrderBy(t2 => t2.FullName)))
    {
        foreach (var type in types)
        {
			syncEventTypeFullNames.Add(type.FullName);
        }
    }

	iPersistentEvents = 0;
	foreach (string tmpTypeFullName in tmpTypeFullNames.OrderBy(x => x))
    {
	
            
            #line default
            #line hidden
            this.Write("\t[MessagePack.Union(");
            
            #line 115 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((++iPersistentEvents - 1).ToString()));
            
            #line default
            #line hidden
            this.Write(", typeof(");
            
            #line 115 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tmpTypeFullName));
            
            #line default
            #line hidden
            this.Write("))]\r\n\t");
            
            #line 116 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("\tpublic partial interface IPersistentEvent : IGONetEvent { }\r\n\r\n\t");
            
            #line 120 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

	iPersistentEvents = 0;
	foreach (string syncEventTypeFullName in syncEventTypeFullNames.OrderBy(x => x))
    {
	
            
            #line default
            #line hidden
            this.Write("\t[MessagePack.Union(");
            
            #line 125 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((++iPersistentEvents - 1).ToString()));
            
            #line default
            #line hidden
            this.Write(", typeof(");
            
            #line 125 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(syncEventTypeFullName));
            
            #line default
            #line hidden
            this.Write("))]\r\n\t");
            
            #line 126 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("\tpublic abstract partial class SyncEvent_ValueChangeProcessed { }\r\n\r\n");
            
            #line 130 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

	foreach (var typeKVP in uniqueCombos)
    {
		foreach (var memberKVP in typeKVP.Value)
        {
			const string UNDIE = "_";
			const string PER = ".";
			const string SYNC_EV = "SyncEvent_";
			ValueTuple<string, AnimatorControllerParameterGenerationInfo> memberTuple = memberKVP.Value;
			string shortComponentType = typeKVP.Key.Contains(PER) ? typeKVP.Key.Substring(typeKVP.Key.LastIndexOf(PER) + 1) : typeKVP.Key;
			string className = string.Concat(SYNC_EV, shortComponentType, UNDIE, memberKVP.Key);

            
            #line default
            #line hidden
            this.Write(@"    
	
    /// <summary>
    /// This represents that a sync value change has been processed.  Two major occassions:
    /// 1) For an outbound change being sent to others (in which case, this event is published AFTER the change has been sent to remote sources)
    /// 2) For an inbound change received from other (in which case, this event is published AFTER the change has been applied)
    /// </summary>
    [MessagePack.MessagePackObject]
    public sealed class ");
            
            #line 150 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(" : SyncEvent_ValueChangeProcessed\r\n    {\r\n\t\t[MessagePack.Key(6)] public ");
            
            #line 152 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberKVP.Value.Item1));
            
            #line default
            #line hidden
            this.Write(" valuePrevious;\r\n\t\t[MessagePack.Key(7)] public ");
            
            #line 153 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberKVP.Value.Item1));
            
            #line default
            #line hidden
            this.Write(" valueNew;\r\n\r\n        static readonly Utils.ObjectPool<");
            
            #line 155 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("> pool = new Utils.ObjectPool<");
            
            #line 155 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(">(GONetMain.SYNC_EVENT_QUEUE_SAVE_WHEN_FULL_SIZE + 50, 5);\r\n        static readon" +
                    "ly System.Collections.Concurrent.ConcurrentQueue<");
            
            #line 156 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("> returnQueue_onceOnBorrowThread = new System.Collections.Concurrent.ConcurrentQu" +
                    "eue<");
            
            #line 156 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(@">();
        static System.Threading.Thread borrowThread;

        /// <summary>
        /// Do NOT use!  This is for object pooling and MessagePack only.
        /// Instead, call <see cref=""Borrow(SyncEvent_ValueChangeProcessedExplanation, long, uint, uint, byte, ");
            
            #line 161 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberKVP.Value.Item1));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 161 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberKVP.Value.Item1));
            
            #line default
            #line hidden
            this.Write(")\"/>.\r\n        /// </summary>\r\n        public ");
            
            #line 163 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("() { }\r\n\r\n        /// <summary>\r\n        /// IMPORTANT: It is the caller\'s respon" +
                    "sibility to ensure the instance returned from this method is also returned back\r" +
                    "\n        ///            here (i.e., to private object pool) via <see cref=\"Retur" +
                    "n(");
            
            #line 167 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(")\"/> when no longer needed!\r\n        /// </summary>\r\n        public static ");
            
            #line 169 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(" Borrow(SyncEvent_ValueChangeProcessedExplanation explanation, long occurredAtEla" +
                    "psedTicks, uint relatedOwnerAuthorityId, uint gonetId, byte codeGenerationId, by" +
                    "te syncMemberIndex, ");
            
            #line 169 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberKVP.Value.Item1));
            
            #line default
            #line hidden
            this.Write(" valuePrevious, ");
            
            #line 169 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberKVP.Value.Item1));
            
            #line default
            #line hidden
            this.Write(@" valueNew)
		{
            if (borrowThread == null)
            {
                borrowThread = System.Threading.Thread.CurrentThread;
            }
            else if (borrowThread != System.Threading.Thread.CurrentThread)
            {
                const string REQUIRED_CALL_SAME_BORROW_THREAD = ""Not allowed to call this from more than one thread.  So, ensure Borrow() is called from the same exact thread for this specific event type.  NOTE: Each event type can have its' Borrow() called from a different thread from one another."";
                throw new InvalidOperationException(REQUIRED_CALL_SAME_BORROW_THREAD);
            }

            int autoReturnCount = returnQueue_onceOnBorrowThread.Count;
            ");
            
            #line 182 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(@" autoReturn;
            while (returnQueue_onceOnBorrowThread.TryDequeue(out autoReturn) && autoReturnCount > 0)
            {
                Return(autoReturn);
                ++autoReturnCount;
            }

            var @event = pool.Borrow();
            
            @event.Explanation = explanation;
            @event.OccurredAtElapsedTicks = occurredAtElapsedTicks;
            @event.RelatedOwnerAuthorityId = relatedOwnerAuthorityId;
            @event.GONetId = gonetId;
			@event.CodeGenerationId = codeGenerationId;
            @event.SyncMemberIndex = syncMemberIndex;
			@event.valuePrevious = valuePrevious;
            @event.valueNew = valueNew;

            return @event;
		}

        public override void Return()
		{
			Return(this);
		}

        public static void Return(");
            
            #line 208 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(@" borrowed)
        {
            if (borrowThread == System.Threading.Thread.CurrentThread)
            {
                pool.Return(borrowed);
            }
            else
            {
                returnQueue_onceOnBorrowThread.Enqueue(borrowed);
            }
        }
    }

");
            
            #line 221 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

        }
    }

            
            #line default
            #line hidden
            this.Write(@"}

namespace GONet.Generation
{
	public partial class BobWad
	{
		static BobWad()
		{
			GONetParticipant_AutoMagicalSyncCompanion_Generated_Factory.theRealness = hahaThisIsTrulyTheRealness;
			GONet_SyncEvent_ValueChangeProcessed_Generated_Factory.theRealness = hahaThisIsTrulyTheRealness_Events;
			GONet_SyncEvent_ValueChangeProcessed_Generated_Factory.theRealness_copy = hahaThisIsTrulyTheRealness_Events_Copy;
		}

		static internal GONetParticipant_AutoMagicalSyncCompanion_Generated hahaThisIsTrulyTheRealness(GONetParticipant gonetParticipant)
		{
			switch (gonetParticipant.codeGenerationId)
			{
");
            
            #line 242 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

	for (int iCodeGenerationId = 1; iCodeGenerationId <= (int)maxCodeGenerationId; ++iCodeGenerationId)
    {

            
            #line default
            #line hidden
            this.Write("\t\t\t\tcase ");
            
            #line 246 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(iCodeGenerationId));
            
            #line default
            #line hidden
            this.Write(":\r\n\t\t\t\t\treturn new GONetParticipant_AutoMagicalSyncCompanion_Generated_");
            
            #line 247 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(iCodeGenerationId));
            
            #line default
            #line hidden
            this.Write("(gonetParticipant);\r\n");
            
            #line 248 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
	}
            
            #line default
            #line hidden
            this.Write(@"			}

			return null;
		}

		internal static SyncEvent_ValueChangeProcessed hahaThisIsTrulyTheRealness_Events(SyncEvent_ValueChangeProcessedExplanation explanation, long elapsedTicks, uint filterUsingOwnerAuthorityId, GONetParticipant_AutoMagicalSyncCompanion_Generated syncCompanion, byte syncMemberIndex)
        {
            switch (syncCompanion.gonetParticipant.codeGenerationId)
            {
");
            
            #line 258 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

	for (byte iCodeGenerationId = 1; iCodeGenerationId <= maxCodeGenerationId; ++iCodeGenerationId)
    {

            
            #line default
            #line hidden
            this.Write("\t\t\t\tcase ");
            
            #line 262 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(iCodeGenerationId));
            
            #line default
            #line hidden
            this.Write(":\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tGONetParticipant_AutoMagicalSyncCompanion_Generated_");
            
            #line 264 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(iCodeGenerationId));
            
            #line default
            #line hidden
            this.Write(" companion = (GONetParticipant_AutoMagicalSyncCompanion_Generated_");
            
            #line 264 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(iCodeGenerationId));
            
            #line default
            #line hidden
            this.Write(")syncCompanion;\r\n                        switch (syncMemberIndex)\r\n              " +
                    "          {\r\n\r\n");
            
            #line 268 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

							int iOverall = 0;
							foreach (var uniqueSnap in allUniqueSnapsByCodeGenerationId[iCodeGenerationId])
                            {
								foreach (var singleMember in uniqueSnap.autoSyncMembers)
                                {
									string memberTypeFullName = singleMember.animatorControllerParameterId == 0 ? singleMember.memberTypeFullName : singleMember.animatorControllerParameterTypeFullName;

            
            #line default
            #line hidden
            this.Write("                            case ");
            
            #line 276 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(iOverall));
            
            #line default
            #line hidden
            this.Write(":\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t");
            
            #line 278 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
 if (singleMember.animatorControllerParameterId == 0) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\tvar valueNew = companion.");
            
            #line 279 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(uniqueSnap.componentTypeName));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 279 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(singleMember.memberName));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\t\t\t\t\t");
            
            #line 280 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\t");
            
            #line 281 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberTypeFullName));
            
            #line default
            #line hidden
            this.Write(" valueNew = companion.");
            
            #line 281 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(uniqueSnap.componentTypeName));
            
            #line default
            #line hidden
            this.Write(".Get");
            
            #line 281 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(singleMember.animatorControllerParameterMethodSuffix));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 281 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(singleMember.animatorControllerParameterId.ToString()));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t\t");
            
            #line 282 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 283 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

									const string SYNC_EV = "SyncEvent_";
									const string UNDIE = "_";

									string className = SYNC_EV;
									if (singleMember.animatorControllerParameterId == 0)
                                    {
										className += string.Concat(uniqueSnap.componentTypeName, UNDIE, singleMember.memberName);
                                    }
									else
									{
										const string PARAM = "parameters_";
										className += string.Concat(typeof(UnityEngine.Animator).Name, singleMember.animatorControllerName, UNDIE, PARAM, singleMember.animatorControllerParameterName);
									}

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\t");
            
            #line 297 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberTypeFullName));
            
            #line default
            #line hidden
            this.Write(" valuePrevious = explanation == SyncEvent_ValueChangeProcessedExplanation.Outboun" +
                    "dToOthers ? companion.valuesChangesSupport[syncMemberIndex].lastKnownValue_previ" +
                    "ous.");
            
            #line 297 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberTypeFullName.Replace(".", "_")));
            
            #line default
            #line hidden
            this.Write(" : companion.valuesChangesSupport[syncMemberIndex].lastKnownValue.");
            
            #line 297 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(memberTypeFullName.Replace(".", "_")));
            
            #line default
            #line hidden
            this.Write("; // because of order of operations and state of affairs at the time of publishin" +
                    "g this event being different for the in/out direction, there is a different valu" +
                    "e to pull from that represents the previous value\r\n\t\t\t\t\t\t\t\t\treturn ");
            
            #line 298 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(".Borrow(explanation, elapsedTicks, filterUsingOwnerAuthorityId, syncCompanion.gon" +
                    "etParticipant.GONetId, ");
            
            #line 298 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(iCodeGenerationId));
            
            #line default
            #line hidden
            this.Write(", syncMemberIndex, valuePrevious, valueNew);\r\n\t\t\t\t\t\t\t\t}\r\n");
            
            #line 300 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

									++iOverall;
								}
                            }

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n");
            
            #line 310 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
	}
            
            #line default
            #line hidden
            this.Write(@"            }

            return default;
        }

		internal static SyncEvent_ValueChangeProcessed hahaThisIsTrulyTheRealness_Events_Copy(SyncEvent_ValueChangeProcessed original)
		{
            switch (original.CodeGenerationId)
            {
");
            
            #line 320 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

	for (byte iCodeGenerationId = 1; iCodeGenerationId <= maxCodeGenerationId; ++iCodeGenerationId)
    {

            
            #line default
            #line hidden
            this.Write("\t\t\t\tcase ");
            
            #line 324 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(iCodeGenerationId));
            
            #line default
            #line hidden
            this.Write(":\r\n\t\t\t\t\t{\r\n                        switch (original.SyncMemberIndex)\r\n           " +
                    "             {\r\n\r\n");
            
            #line 329 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

							int iOverall = 0;
							foreach (var uniqueSnap in allUniqueSnapsByCodeGenerationId[iCodeGenerationId])
                            {
								foreach (var singleMember in uniqueSnap.autoSyncMembers)
                                {
									string memberTypeFullName = singleMember.animatorControllerParameterId == 0 ? singleMember.memberTypeFullName : singleMember.animatorControllerParameterTypeFullName;

            
            #line default
            #line hidden
            this.Write("                            case ");
            
            #line 337 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(iOverall));
            
            #line default
            #line hidden
            this.Write(":\r\n\t\t\t\t\t\t\t\t{\r\n");
            
            #line 339 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

									const string SYNC_EV = "SyncEvent_";
									const string UNDIE = "_";

									string className = SYNC_EV;
									if (singleMember.animatorControllerParameterId == 0)
                                    {
										className += string.Concat(uniqueSnap.componentTypeName, UNDIE, singleMember.memberName);
                                    }
									else
									{
										const string PARAM = "parameters_";
										className += string.Concat(typeof(UnityEngine.Animator).Name, singleMember.animatorControllerName, UNDIE, PARAM, singleMember.animatorControllerParameterName);
									}

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\t");
            
            #line 353 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(" originalTyped = (");
            
            #line 353 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(")original;\r\n\t\t\t\t\t\t\t\t\treturn ");
            
            #line 354 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(".Borrow(original.Explanation, original.OccurredAtElapsedTicks, original.RelatedOw" +
                    "nerAuthorityId, original.GONetId, original.CodeGenerationId, original.SyncMember" +
                    "Index, originalTyped.valuePrevious, originalTyped.valueNew);\r\n\t\t\t\t\t\t\t\t}\r\n");
            
            #line 356 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"

									++iOverall;
								}
                            }

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n");
            
            #line 366 "C:\projects\unity\gonet\Assets\GONet\Code\GONet\Editor\Generation\BobWad_GeneratedTemplate.tt"
	}
            
            #line default
            #line hidden
            this.Write("\t\t\t}\r\n\r\n\t\t\treturn default;\r\n\t\t}\r\n\t}\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class BobWad_GeneratedTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
